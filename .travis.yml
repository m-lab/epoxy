# Travis configuration for ePoxy.
#
# ePoxy is a Go project supporting release automation to M-Lab GCP projects for
# branches in the m-lab/epoxy repository. To achieve this, the build takes the
# following steps:
#
#  * decrypt service account credentials
#  * install the Google Cloud SDK command line tools (gcloud)
#  * cache the gcloud installation and setup
#  * test and build the go code
#  * on success, deploy the result when the origin branch matches a supported
#    deployment target.
#
language: go
go_import_path: github.com/m-lab/epoxy

before_install:
# NB: Encrypted values are not defined in forks or pull requests.
# Decrypt the tar archive containing the GCP service account key files.
- if [[ -n "$encrypted_2ac64e4220d5_iv" ]] ; then
  openssl aes-256-cbc -d
  -K $encrypted_2ac64e4220d5_key
  -iv $encrypted_2ac64e4220d5_iv
  -in $TRAVIS_BUILD_DIR/travis/service-accounts.tar.enc
  -out /tmp/service-accounts.tar ; fi
# After unpacking, there should be one service account key file for every GCP
# project referenced in the "deploy" section. These keys authenticate the
# gcloud deploy operations.
- if [[ -n "$encrypted_2ac64e4220d5_iv" ]] ; then
  tar -C /tmp -xvf /tmp/service-accounts.tar ; fi
- go get github.com/mattn/goveralls
- go get github.com/wadey/gocovmerge

# These directories will be cached on successful "script" builds, and restored,
# if available, to save time on future builds.
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

script:
# Run "unit tests" with coverage.
- for module in handler nextboot storage template ; do
  go test -v -covermode=count -coverprofile=$module.cov github.com/m-lab/epoxy/$module ;
  done

# Coveralls
- $HOME/gopath/bin/gocovmerge *.cov > merge.cov
- $HOME/gopath/bin/goveralls -coverprofile=merge.cov -service=travis-ci

- cd $TRAVIS_BUILD_DIR/cmd/epoxy_boot_server && go build
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh

# NB: epoxy deployments are managed by CloudBuilder Triggers.
